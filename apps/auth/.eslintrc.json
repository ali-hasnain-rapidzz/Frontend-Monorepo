{
  "extends": ["../../.eslintrc.json"],
  "plugins": ["validate-filename"],

  "rules": {
    "import/named": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "consistent-return": "off",
    "prefer-const": "off",
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "import/no-unresolved": ["error", { "ignore": ["^@"] }]
  },
  "overrides": [
    {
      "files": ["**/*.tsx", "**/*.ts"],
      "rules": {
        "validate-filename/naming-rules": [
          "error",
          {
            "rules": [
              {
                "case": "snake",
                "target": "**/components/**",
                "patterns": "^.*\\.component\\.tsx$"
              },
              {
                "case": "snake",
                "target": "**/services/**",
                "patterns": "^.*\\.service\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/api/**",
                "patterns": "^.*\\.controller\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/decorators/**",
                "patterns": "^.*\\.decorator\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/endpoints/**",
                "patterns": "^.*\\.endpoint\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/handlers/**",
                "patterns": "^.*\\.handler\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/libraries/**",
                "patterns": "^.*\\.lib\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/middlewares/**",
                "patterns": "^.*\\.middleware\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/models/**",
                "patterns": "^.*\\.model\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/plugins/**",
                "patterns": "^.*\\.plugin\\.ts$"
              },
              {
                "case": "snake",
                "target": "**/validators/**",
                "patterns": "^.*\\.validator\\.ts$"
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["tests/**/*"],
      "rules": {
        "no-param-reassign": ["error", { "props": false }]
      }
    },
    {
      "files": [
        "**/components/**/*.ts",
        "**/api/**/*.ts",
        "**/constants/**/*.ts",
        "**/decorators/**/*.ts",
        "**/endpoints/**/*.ts",
        "**/handlers/**/*.ts",
        "**/libraries/**/*.ts",
        "**/middlewares/**/*.ts",
        "**/models/**/*.ts",
        "**/plugins/**/*.ts",
        "**/services/**/*.ts",
        "**/validators/**/*.ts",
        "**/types/**/*.ts"
      ],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "class",
            "format": ["PascalCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "function",
            "format": ["camelCase"]
          },
          {
            "selector": "parameter",
            "format": ["camelCase"]
          },

          {
            "selector": "method",
            "format": ["camelCase"]
          }
        ]
      }
    }
  ]
}
